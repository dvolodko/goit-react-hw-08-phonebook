{"version":3,"file":"static/js/133.5069efa6.chunk.js","mappings":"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","sources":["redux/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Contact/Contact.styled.js","components/Contact/Contact.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","views/ContactsView/ContactsView.styled.js","views/ContactsView/ContactsView.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectSearchQuery = state => state.searchQuery.value;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectSearchQuery],\n  (items, searchQuery) => {\n    return items.filter(contact =>\n      contact.name.toLowerCase().includes(searchQuery.toLowerCase())\n    );\n  }\n);\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div``;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  min-width: 400px;\n  border: 1px solid black;\n  padding: 8px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  &:not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n\nexport const InputField = styled.input`\n  width: 360px;\n`;\n\nexport const SubmitButton = styled.button`\n  max-width: 120px;\n  cursor: pointer;\n  border: 1px solid black;\n  border-radius: 6px;\n  transition: background-color 250ms ease-in-out;\n  &:hover {\n    background-color: #6ee9ff;\n  }\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\nimport { addContact } from 'redux/operations';\nimport {\n  Container,\n  Form,\n  Label,\n  InputField,\n  SubmitButton,\n} from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    dispatch(addContact({ name, number }));\n    form.reset();\n  };\n\n  return (\n    <Container>\n      <Form onSubmit={handleSubmit}>\n        <Label>\n          Name{' '}\n          <InputField\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </Label>\n        <Label>\n          Number{' '}\n          <InputField\n            type=\"tel\"\n            name=\"number\"\n            placeholder=\"Number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </Label>\n        <SubmitButton type=\"submit\">Add contact</SubmitButton>\n      </Form>\n    </Container>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  &:not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n\nexport const InputField = styled.input`\n  width: 360px;\n`;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Label, InputField } from './Filter.styled';\nimport { setSearchQuery } from 'redux/searchSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const onChange = event => {\n    dispatch(setSearchQuery(event.target.value));\n  };\n\n  return (\n    <Label>\n      Find contacts by name\n      <InputField type=\"text\" name=\"filter\" onChange={onChange} />\n    </Label>\n  );\n};\n","import styled from '@emotion/styled';\nimport { BsFillPersonFill } from 'react-icons/bs';\n\nexport const ContactItem = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n\nexport const DeleteButton = styled.button`\n  max-width: 120px;\n  cursor: pointer;\n  border: 1px solid black;\n  border-radius: 6px;\n  transition: background-color 250ms ease-in-out;\n  &:hover {\n    background-color: #6ee9ff;\n  }\n  margin-left: 15px;\n`;\n\nexport const ContactIcon = styled(BsFillPersonFill)`\n  color: #33ff00;\n  margin-right: 16px;\n  vertical-align: middle;\n`;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/operations';\nimport PropTypes from 'prop-types';\nimport { DeleteButton, ContactItem, ContactIcon } from './Contact.styled';\n\nexport const Contact = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <ContactItem>\n      <ContactIcon />\n      {name}: {number}\n      <DeleteButton type=\"button\" data-id={id} onClick={handleDelete}>\n        Delete\n      </DeleteButton>\n    </ContactItem>\n  );\n};\n\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/operations';\nimport {\n  selectIsLoading,\n  selectError,\n  selectVisibleContacts,\n} from 'redux/selectors';\nimport { Contact } from 'components/Contact/Contact';\nimport { List } from './ContactList.styled';\nimport { ColorRing } from 'react-loader-spinner';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  const contacts = useSelector(selectVisibleContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <List>\n      {isLoading && !error && (\n        <ColorRing\n          visible={true}\n          height=\"80\"\n          width=\"80\"\n          ariaLabel=\"blocks-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"blocks-wrapper\"\n          colors={['#b8c480', '#B2A3B5', '#F4442E', '#51E5FF', '#429EA6']}\n        />\n      )}\n      {error && <p>{error}</p>}\n      {contacts.length > 0 &&\n        contacts.map(({ id, name, number }) => (\n          <Contact key={id} id={id} name={name} number={number} />\n        ))}\n    </List>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 16px;\n`;\n\nexport const ContactsListWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 400px;\n`;\n","import React from 'react';\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { Filter } from '../../components/Filter/Filter';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport { Container, ContactsListWrapper } from './ContactsView.styled';\n\nconst ContactsView = () => {\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <ContactsListWrapper>\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </ContactsListWrapper>\n    </Container>\n  );\n};\n\nexport default ContactsView;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","searchQuery","value","filter","contact","name","toLowerCase","includes","Container","styled","_templateObject","_taggedTemplateLiteral","Form","_templateObject2","Label","_templateObject3","InputField","_templateObject4","SubmitButton","_templateObject5","ContactForm","dispatch","useDispatch","useSelector","_jsx","children","_jsxs","onSubmit","event","preventDefault","form","target","elements","number","some","alert","concat","addContact","reset","type","placeholder","pattern","title","required","Filter","onChange","setSearchQuery","ContactItem","DeleteButton","ContactIcon","BsFillPersonFill","Contact","_ref","id","onClick","deleteContact","List","ContactList","useEffect","fetchContacts","ColorRing","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","length","map","ContactsListWrapper"],"sourceRoot":""}